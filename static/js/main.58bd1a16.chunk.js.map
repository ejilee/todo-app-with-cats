{"version":3,"sources":["components/InputForm.js","components/TodoCats.js","components/TodoListItem.js","components/TodoList.js","components/CatsListItem.js","components/CatsModal.js","App.js","serviceWorker.js","index.js"],"names":["InputForm","cats","todoItemAdd","useState","inputValue","setInputValue","catValue","setCatValue","prioValue","setPrioValue","inputOnChange","useCallback","e","target","value","catOnChange","parseInt","prioOnChange","onSubmit","preventDefault","className","onChange","map","cat","id","key","name","type","defaultChecked","htmlFor","style","color","alt","placeholder","autoFocus","React","memo","todos","openCatsModal","length","filter","todo","cate","onClick","todoItemRemove","todoItemToggleCheck","todoItemToggleEdit","todoItemModify","checked","prior","text","isBeingEdited","console","log","inputOnKey","keyCode","inputOnSubmitEdit","data-id","data-priority","onKeyDown","undefined","find","todosCount","catRemove","catToggleEdit","catModify","onCatDelete","deleteMessage","window","confirm","maxLength","catsModalState","closeCatsModal","catAdd","catsModalClass","bulkStartNum","createBulkTodos","array","i","push","catsData","sort","todoReducer","action","concat","todoItemId","todoItemText","catItemId","catsReducer","newCat","catItemText","App","useReducer","dispatchTodo","dispatchCats","setCatsModalState","nextTodoId","useRef","nextCatId","current","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58bd1a16.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport './InputForm.scss';\r\nimport { IoIosAddCircleOutline, IoIosFlag } from 'react-icons/io';\r\n\r\nconst InputForm = ({ cats, todoItemAdd }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [catValue, setCatValue] = useState(0);\r\n    const [prioValue, setPrioValue] = useState(3);\r\n\r\n    const inputOnChange = useCallback(e => {\r\n        setInputValue(e.target.value);\r\n    }, []);\r\n\r\n    const catOnChange = useCallback(e => {\r\n        setCatValue(parseInt(e.target.value));\r\n    }, []);\r\n\r\n    const prioOnChange = useCallback(e => {\r\n        setPrioValue(parseInt(e.target.value));\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            if (inputValue !== '') todoItemAdd(inputValue, catValue, prioValue);\r\n            setInputValue('');\r\n            e.preventDefault();\r\n        },\r\n        [todoItemAdd, inputValue, catValue, prioValue],\r\n    );\r\n\r\n    return (\r\n        <div className=\"inputBox\">\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"inputOptionCat\">\r\n                    <select onChange={catOnChange}>\r\n                        {cats.map(cat => (\r\n                            <option value={cat.id} key={cat.id}>\r\n                                {cat.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"inputOptionPrio\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        id=\"inputPriority3\"\r\n                        name=\"inputPriority\"\r\n                        value=\"3\"\r\n                        onChange={prioOnChange}\r\n                        defaultChecked\r\n                    />\r\n                    <label htmlFor=\"inputPriority3\">\r\n                        <IoIosFlag\r\n                            style={{ color: '#999' }}\r\n                            alt=\"priority_low\"\r\n                        />\r\n                    </label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        id=\"inputPriority2\"\r\n                        name=\"inputPriority\"\r\n                        value=\"2\"\r\n                        onChange={prioOnChange}\r\n                    />\r\n                    <label htmlFor=\"inputPriority2\">\r\n                        <IoIosFlag\r\n                            style={{ color: '#375077' }}\r\n                            alt=\"priority_medium\"\r\n                        />\r\n                    </label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        id=\"inputPriority1\"\r\n                        name=\"inputPriority\"\r\n                        value=\"1\"\r\n                        onChange={prioOnChange}\r\n                    />\r\n                    <label htmlFor=\"inputPriority1\">\r\n                        <IoIosFlag\r\n                            style={{ color: '#df5c74' }}\r\n                            alt=\"priority_high\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <input\r\n                    className=\"todoInputText\"\r\n                    type=\"text\"\r\n                    placeholder=\"new entry\"\r\n                    value={inputValue}\r\n                    onChange={inputOnChange}\r\n                    autoFocus\r\n                />\r\n                <button className=\"todoInputButton\" type=\"submit\">\r\n                    <IoIosAddCircleOutline />\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputForm;\r\n","import React from 'react';\r\nimport './TodoCats.scss';\r\nimport { IoMdFlower } from 'react-icons/io';\r\n\r\nconst TodoCats = ({ cats, todos, openCatsModal }) => {\r\n    return (\r\n        <div>\r\n            <ul className=\"TodoListCatsList\">\r\n                <li className=\"TodoListCat currentCat\">all ({todos.length})</li>\r\n                {cats.map(cat => (\r\n                    <li className=\"TodoListCat\" key={cat.id}>\r\n                        {cat.name} (\r\n                        {todos.filter(todo => todo.cate === cat.id).length})\r\n                    </li>\r\n                ))}\r\n                <li\r\n                    className=\"TodoListCat TodoListCatAdd\"\r\n                    onClick={() => openCatsModal()}\r\n                >\r\n                    <IoMdFlower />\r\n                </li>\r\n            </ul>\r\n            <div className=\"TodoListCatsListBottom\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(TodoCats);\r\n","import React, { useState, useCallback } from 'react';\r\nimport {\r\n    IoIosRemoveCircleOutline,\r\n    IoMdCreate,\r\n    IoMdSquareOutline,\r\n    IoIosCheckboxOutline,\r\n    IoIosCheckmark,\r\n    IoIosClose,\r\n    IoIosFlag,\r\n} from 'react-icons/io';\r\nimport './TodoListItem.scss';\r\n\r\nconst TodoListItem = ({\r\n    cat,\r\n    todo,\r\n    todoItemRemove,\r\n    todoItemToggleCheck,\r\n    todoItemToggleEdit,\r\n    todoItemModify,\r\n}) => {\r\n    const { id, checked, cate, prior, text, isBeingEdited } = todo;\r\n\r\n    const [inputValue, setInputValue] = useState(text);\r\n    console.log(inputValue);\r\n\r\n    const inputOnChange = useCallback(e => {\r\n        setInputValue(e.target.value);\r\n    }, []);\r\n\r\n    const inputOnKey = useCallback(\r\n        e => {\r\n            if (e.keyCode === 27) todoItemToggleEdit(id);\r\n        },\r\n        [id, todoItemToggleEdit],\r\n    );\r\n\r\n    const inputOnSubmitEdit = useCallback(\r\n        e => {\r\n            todoItemToggleEdit(id);\r\n            todoItemModify(id, inputValue);\r\n            e.preventDefault();\r\n        },\r\n        [id, inputValue, todoItemToggleEdit, todoItemModify],\r\n    );\r\n\r\n    return (\r\n        <li\r\n            className={\r\n                `todoListItem todoListPriority` +\r\n                prior +\r\n                ` todoChecked_` +\r\n                checked\r\n            }\r\n            data-id={id}\r\n            data-priority={prior}\r\n        >\r\n            <button\r\n                className=\"checkBox\"\r\n                onClick={() => todoItemToggleCheck(id)}\r\n            >\r\n                {checked ? <IoIosCheckboxOutline /> : <IoMdSquareOutline />}\r\n            </button>\r\n            {prior !== 3 ? (\r\n                <button className=\"priorityFlag\">\r\n                    <IoIosFlag />\r\n                </button>\r\n            ) : null}\r\n\r\n            {isBeingEdited ? (\r\n                <form className=\"todoText\" onSubmit={inputOnSubmitEdit}>\r\n                    <input\r\n                        className=\"todoEditText\"\r\n                        type=\"text\"\r\n                        value={inputValue}\r\n                        onChange={inputOnChange}\r\n                        onKeyDown={inputOnKey}\r\n                        autoFocus\r\n                    />\r\n                    <button\r\n                        className=\"applyEdit\"\r\n                        onClick={inputOnSubmitEdit}\r\n                        type=\"submit\"\r\n                    >\r\n                        <IoIosCheckmark />\r\n                    </button>\r\n                    <button\r\n                        className=\"cancelEdit\"\r\n                        onClick={() => todoItemToggleEdit(id)}\r\n                    >\r\n                        <IoIosClose />\r\n                    </button>\r\n                </form>\r\n            ) : (\r\n                <>\r\n                    <span className=\"todoText\">{inputValue || '-'}</span>\r\n                    {cat !== undefined && cat.id !== 0 ? (\r\n                        <span className={`catLabel catNum` + cate}>\r\n                            {cat.name || '-'}\r\n                        </span>\r\n                    ) : null}\r\n                    <button\r\n                        className=\"editButton\"\r\n                        onClick={() => todoItemToggleEdit(id)}\r\n                    >\r\n                        <IoMdCreate />\r\n                    </button>\r\n                    <button\r\n                        className=\"deleteButton\"\r\n                        onClick={() => todoItemRemove(id)}\r\n                    >\r\n                        <IoIosRemoveCircleOutline />\r\n                    </button>\r\n                </>\r\n            )}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default React.memo(TodoListItem);\r\n","import React from 'react';\r\nimport TodoListItem from './TodoListItem';\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = ({\r\n    cats,\r\n    todos,\r\n    todoItemRemove,\r\n    todoItemToggleCheck,\r\n    todoItemToggleEdit,\r\n    todoItemModify,\r\n}) => {\r\n    return (\r\n        <div className=\"TodoListPage\">\r\n            <ul>\r\n                {todos.map(todo => (\r\n                    <TodoListItem\r\n                        cat={cats.find(cat => cat.id === todo.cate)}\r\n                        todo={todo}\r\n                        key={todo.id}\r\n                        todoItemRemove={todoItemRemove}\r\n                        todoItemToggleCheck={todoItemToggleCheck}\r\n                        todoItemToggleEdit={todoItemToggleEdit}\r\n                        todoItemModify={todoItemModify}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React, { useState, useCallback } from 'react';\r\nimport {\r\n    IoIosRemoveCircleOutline,\r\n    IoMdCreate,\r\n    IoIosCheckmark,\r\n    IoIosClose,\r\n} from 'react-icons/io';\r\nimport './CatsListItem.scss';\r\n\r\nconst CatsListItem = ({\r\n    todosCount,\r\n    cat,\r\n    catRemove,\r\n    catToggleEdit,\r\n    catModify,\r\n}) => {\r\n    const { id, name, isBeingEdited } = cat;\r\n\r\n    const [inputValue, setInputValue] = useState(name);\r\n    console.log(inputValue);\r\n\r\n    const inputOnChange = useCallback(e => {\r\n        setInputValue(e.target.value);\r\n    }, []);\r\n\r\n    const inputOnKey = useCallback(\r\n        e => {\r\n            if (e.keyCode === 27) catToggleEdit(id);\r\n        },\r\n        [id, catToggleEdit],\r\n    );\r\n\r\n    const inputOnSubmitEdit = useCallback(\r\n        e => {\r\n            catToggleEdit(id);\r\n            catModify(id, inputValue);\r\n            e.preventDefault();\r\n        },\r\n        [id, inputValue, catToggleEdit, catModify],\r\n    );\r\n\r\n    const onCatDelete = useCallback(\r\n        (id, name, todosCount) => {\r\n            let deleteMessage =\r\n                'You have  ' +\r\n                todosCount +\r\n                '  todo items in this category :  ' +\r\n                name +\r\n                '\\n' +\r\n                '\\n' +\r\n                'These todo items will be listed under uncategorized.' +\r\n                '\\n' +\r\n                'Are you sure you want to delete this category?';\r\n\r\n            if (id !== 0 && todosCount === 0) {\r\n                catRemove(id);\r\n            } else if (\r\n                id !== 0 &&\r\n                todosCount > 0 &&\r\n                window.confirm(deleteMessage)\r\n            ) {\r\n                catRemove(id);\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        [catRemove],\r\n    );\r\n\r\n    return (\r\n        <li className=\"catsListItem\" data-id={id} key={id}>\r\n            {isBeingEdited ? (\r\n                <form className=\"catName\" onSubmit={inputOnSubmitEdit}>\r\n                    <input\r\n                        className=\"catNameEdit\"\r\n                        type=\"text\"\r\n                        maxLength=\"24\"\r\n                        value={inputValue}\r\n                        onChange={inputOnChange}\r\n                        onKeyDown={inputOnKey}\r\n                        autoFocus\r\n                    />\r\n                    <button\r\n                        className=\"applyEdit\"\r\n                        onClick={inputOnSubmitEdit}\r\n                        type=\"submit\"\r\n                    >\r\n                        <IoIosCheckmark />\r\n                    </button>\r\n                    <button\r\n                        className=\"cancelEdit\"\r\n                        onClick={() => catToggleEdit(id)}\r\n                    >\r\n                        <IoIosClose />\r\n                    </button>\r\n                </form>\r\n            ) : (\r\n                <>\r\n                    <span className=\"catName\">\r\n                        {inputValue} ({todosCount})\r\n                    </span>\r\n                    <button\r\n                        className=\"editButton\"\r\n                        onClick={() => catToggleEdit(id)}\r\n                    >\r\n                        <IoMdCreate />\r\n                    </button>\r\n\r\n                    {id !== 0 ? (\r\n                        <button\r\n                            className=\"deleteButton\"\r\n                            onClick={() =>\r\n                                onCatDelete(id, inputValue, todosCount)\r\n                            }\r\n                        >\r\n                            <IoIosRemoveCircleOutline />\r\n                        </button>\r\n                    ) : null}\r\n                </>\r\n            )}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default React.memo(CatsListItem);\r\n","import React, { useState, useCallback } from 'react';\r\nimport './CatsModal.scss';\r\nimport { IoIosAddCircleOutline, IoIosClose } from 'react-icons/io';\r\nimport CatsListItem from './CatsListItem.js';\r\n\r\nconst CatsModal = ({\r\n    todos,\r\n    catsModalState,\r\n    cats,\r\n    closeCatsModal,\r\n    catAdd,\r\n    catRemove,\r\n    catToggleEdit,\r\n    catModify,\r\n}) => {\r\n    const catsModalClass = catsModalState ? 'modalTrue' : 'modalFalse';\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const inputOnChange = useCallback(e => {\r\n        setInputValue(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            if (inputValue !== '') catAdd(inputValue);\r\n            setInputValue('');\r\n            e.preventDefault();\r\n        },\r\n        [inputValue, catAdd],\r\n    );\r\n\r\n    return (\r\n        <div className={'modalWrapper ' + catsModalClass}>\r\n            <div className=\"catsModal\">\r\n                <button className=\"closeModal\" onClick={closeCatsModal}>\r\n                    <IoIosClose />\r\n                </button>\r\n                <h3>Manage Categories</h3>\r\n\r\n                <ul className=\"catsList\">\r\n                    {cats.map(cat => (\r\n                        <CatsListItem\r\n                            todosCount={\r\n                                todos.filter(todo => todo.cate === cat.id)\r\n                                    .length\r\n                            }\r\n                            cat={cat}\r\n                            key={cat.id}\r\n                            catRemove={catRemove}\r\n                            catToggleEdit={catToggleEdit}\r\n                            catModify={catModify}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n\r\n                <form className=\"catAddForm\" onSubmit={onSubmit}>\r\n                    <input\r\n                        className=\"todoInputText\"\r\n                        type=\"text\"\r\n                        placeholder=\"new category name\"\r\n                        maxLength=\"24\"\r\n                        value={inputValue}\r\n                        onChange={inputOnChange}\r\n                        autoFocus\r\n                    />\r\n                    <button className=\"catAdd\" type=\"submit\">\r\n                        <IoIosAddCircleOutline />\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            <div className=\"modalBg\" onClick={closeCatsModal}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(CatsModal);\r\n","import React, { useState, useRef, useCallback, useReducer } from 'react';\r\nimport './App.scss';\r\nimport InputForm from './components/InputForm';\r\nimport TodoCats from './components/TodoCats';\r\nimport TodoList from './components/TodoList';\r\nimport CatsModal from './components/CatsModal.js';\r\n\r\nconst bulkStartNum = 2500;\r\n\r\nfunction createBulkTodos() {\r\n    const array = [];\r\n    for (let i = 1; i <= bulkStartNum; i++) {\r\n        array.push({\r\n            id: i,\r\n            checked: false,\r\n            cate: 0,\r\n            prior: 3,\r\n            text: `todo item #${i}`,\r\n            isBeingEdited: false,\r\n        });\r\n    }\r\n    return array;\r\n}\r\n\r\nconst catsData = [\r\n    {\r\n        id: 0,\r\n        sort: 0,\r\n        name: '-',\r\n        isBeingEdited: false,\r\n    },\r\n    {\r\n        id: 1,\r\n        sort: 1,\r\n        name: 'plants',\r\n        isBeingEdited: false,\r\n    },\r\n    {\r\n        id: 2,\r\n        sort: 2,\r\n        name: 'cats',\r\n        isBeingEdited: false,\r\n    },\r\n    {\r\n        id: 3,\r\n        sort: 3,\r\n        name: 'dogs',\r\n        isBeingEdited: false,\r\n    },\r\n];\r\n\r\nfunction todoReducer(todos, action) {\r\n    switch (action.type) {\r\n        case 'INSERT':\r\n            return todos.concat(action.todo);\r\n        case 'REMOVE':\r\n            return todos.filter(todo => todo.id !== action.todoItemId);\r\n        case 'TOGGLE_CHECK':\r\n            return todos.map(todo =>\r\n                todo.id === action.todoItemId\r\n                    ? { ...todo, checked: !todo.checked }\r\n                    : todo,\r\n            );\r\n        case 'TOGGLE_EDIT':\r\n            return todos.map(todo =>\r\n                todo.id === action.todoItemId\r\n                    ? { ...todo, isBeingEdited: !todo.isBeingEdited }\r\n                    : todo,\r\n            );\r\n        case 'MODIFY':\r\n            return todos.map(todo =>\r\n                todo.id === action.todoItemId\r\n                    ? { ...todo, text: action.todoItemText }\r\n                    : todo,\r\n            );\r\n        case 'UNCATEGORIZE':\r\n            return todos.map(todo =>\r\n                todo.cate === action.catItemId ? { ...todo, cate: 0 } : todo,\r\n            );\r\n        default:\r\n            return todos;\r\n    }\r\n}\r\n\r\nfunction catsReducer(cats, action) {\r\n    switch (action.type) {\r\n        case 'INSERT':\r\n            return cats.concat(action.newCat);\r\n        case 'REMOVE':\r\n            return cats.filter(cat => cat.id !== action.catItemId);\r\n        case 'TOGGLE_EDIT':\r\n            return cats.map(cat =>\r\n                cat.id === action.catItemId\r\n                    ? { ...cat, isBeingEdited: !cat.isBeingEdited }\r\n                    : cat,\r\n            );\r\n        case 'MODIFY':\r\n            return cats.map(cat =>\r\n                cat.id === action.catItemId\r\n                    ? { ...cat, name: action.catItemText }\r\n                    : cat,\r\n            );\r\n        default:\r\n            return cats;\r\n    }\r\n}\r\n\r\nfunction App() {\r\n    const [todos, dispatchTodo] = useReducer(\r\n        todoReducer,\r\n        undefined,\r\n        createBulkTodos,\r\n    );\r\n    const [cats, dispatchCats] = useReducer(catsReducer, catsData);\r\n    const [catsModalState, setCatsModalState] = useState(false);\r\n    let nextTodoId = useRef(bulkStartNum + 1);\r\n    let nextCatId = useRef(5);\r\n\r\n    const todoItemAdd = useCallback((inputValue, catValue, prioValue) => {\r\n        const todo = {\r\n            id: nextTodoId.current,\r\n            checked: false,\r\n            cate: catValue,\r\n            prior: prioValue,\r\n            text: inputValue,\r\n            isBeingEdited: false,\r\n        };\r\n        dispatchTodo({ type: 'INSERT', todo });\r\n        nextTodoId.current += 1;\r\n    }, []);\r\n\r\n    const todoItemRemove = useCallback(todoItemId => {\r\n        dispatchTodo({ type: 'REMOVE', todoItemId });\r\n    }, []);\r\n\r\n    const todoItemToggleCheck = useCallback(todoItemId => {\r\n        dispatchTodo({ type: 'TOGGLE_CHECK', todoItemId });\r\n    }, []);\r\n\r\n    const todoItemToggleEdit = useCallback(todoItemId => {\r\n        dispatchTodo({ type: 'TOGGLE_EDIT', todoItemId });\r\n    }, []);\r\n\r\n    const todoItemModify = useCallback((todoItemId, todoItemText) => {\r\n        // dispatchTodo({ type: 'MODIFY', todoItemId, todoItemText });\r\n    }, []);\r\n\r\n    const openCatsModal = useCallback(() => {\r\n        setCatsModalState(true);\r\n    }, []);\r\n\r\n    const closeCatsModal = useCallback(() => {\r\n        setCatsModalState(false);\r\n    }, []);\r\n\r\n    const catAdd = useCallback(inputValue => {\r\n        const newCat = {\r\n            id: nextCatId.current,\r\n            sort: 2,\r\n            name: inputValue,\r\n            isBeingEdited: false,\r\n        };\r\n        dispatchCats({ type: 'INSERT', newCat });\r\n        nextCatId.current += 1;\r\n    }, []);\r\n\r\n    const catRemove = useCallback(catItemId => {\r\n        dispatchCats({ type: 'REMOVE', catItemId });\r\n        dispatchTodo({ type: 'UNCATEGORIZE', catItemId });\r\n    }, []);\r\n\r\n    const catToggleEdit = useCallback(catItemId => {\r\n        dispatchCats({ type: 'TOGGLE_EDIT', catItemId });\r\n    }, []);\r\n\r\n    const catModify = useCallback((catItemId, catItemText) => {\r\n        dispatchCats({ type: 'MODIFY', catItemId, catItemText });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">Kitty Needs Kibbles</header>\r\n            <main className=\"App-main\">\r\n                <CatsModal\r\n                    todos={todos}\r\n                    catsModalState={catsModalState}\r\n                    cats={cats}\r\n                    closeCatsModal={closeCatsModal}\r\n                    catAdd={catAdd}\r\n                    catRemove={catRemove}\r\n                    catToggleEdit={catToggleEdit}\r\n                    catModify={catModify}\r\n                />\r\n                <InputForm cats={cats} todoItemAdd={todoItemAdd} />\r\n                <TodoCats\r\n                    cats={cats}\r\n                    todos={todos}\r\n                    openCatsModal={openCatsModal}\r\n                />\r\n                <TodoList\r\n                    cats={cats}\r\n                    todos={todos}\r\n                    todoItemRemove={todoItemRemove}\r\n                    todoItemToggleCheck={todoItemToggleCheck}\r\n                    todoItemToggleEdit={todoItemToggleEdit}\r\n                    todoItemModify={todoItemModify}\r\n                />\r\n            </main>\r\n            <footer className=\"App-footer\">you need new socks in 2020</footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}