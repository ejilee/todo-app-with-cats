{"version":3,"sources":["components/InputForm.js","components/TodoCats.js","components/TodoListItem.js","components/TodoList.js","components/CatsListItem.js","components/CatsModal.js","App.js","serviceWorker.js","index.js"],"names":["InputForm","cats","todoItemAdd","useState","inputValue","setInputValue","catValue","setCatValue","prioValue","setPrioValue","inputOnChange","useCallback","e","target","value","catOnChange","parseInt","prioOnChange","onSubmit","preventDefault","className","type","placeholder","onChange","autoFocus","map","cat","id","key","name","htmlFor","style","color","alt","defaultChecked","React","memo","todos","openCatsModal","length","filter","todo","cate","onClick","todoItemRemove","todoItemToggleCheck","todoItemToggleEdit","todoItemModify","checked","prior","text","isBeingEdited","find","inputOnSubmitEdit","data-id","data-priority","undefined","catRemove","catToggleEdit","catModify","count","onCatDelete","deleteMessage","window","confirm","catsModalState","closeCatsModal","catAdd","catsModalClass","catsData","sort","bulkStartNum","createBulkTodos","array","i","push","todoReducer","action","concat","todoItemId","todoItemText","catItemId","catsReducer","newCat","catItemText","App","useReducer","dispatchTodo","dispatchCats","setCatsModalState","nextTodoId","useRef","nextCatId","current","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff6524f8.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport './InputForm.scss';\r\nimport { IoIosAddCircleOutline, IoIosFlag } from 'react-icons/io';\r\n\r\nconst InputForm = ({ cats, todoItemAdd }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [catValue, setCatValue] = useState(0);\r\n    const [prioValue, setPrioValue] = useState(4);\r\n\r\n    const inputOnChange = useCallback(e => {\r\n        setInputValue(e.target.value);\r\n    }, []);\r\n\r\n    const catOnChange = useCallback(e => {\r\n        setCatValue(parseInt(e.target.value));\r\n    }, []);\r\n\r\n    const prioOnChange = useCallback(e => {\r\n        setPrioValue(parseInt(e.target.value));\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            if (inputValue !== '') todoItemAdd(inputValue, catValue, prioValue);\r\n            setInputValue('');\r\n            e.preventDefault();\r\n        },\r\n        [todoItemAdd, inputValue, catValue, prioValue],\r\n    );\r\n\r\n    return (\r\n        <div className=\"inputBox\">\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    className=\"todoInputText\"\r\n                    type=\"text\"\r\n                    placeholder=\"new entry\"\r\n                    value={inputValue}\r\n                    onChange={inputOnChange}\r\n                    autoFocus\r\n                />\r\n                <button className=\"todoInputButton\" type=\"submit\">\r\n                    <IoIosAddCircleOutline />\r\n                </button>\r\n                <div className=\"inputOptionCat\">\r\n                    <select onChange={catOnChange}>\r\n                        {cats.map(cat => (\r\n                            <option value={cat.id} key={cat.id}>\r\n                                {cat.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"inputOptionPrio\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        id=\"inputPriority1\"\r\n                        name=\"inputPriority\"\r\n                        value=\"1\"\r\n                        onChange={prioOnChange}\r\n                    />\r\n                    <label htmlFor=\"inputPriority1\">\r\n                        <IoIosFlag\r\n                            style={{ color: '#df5c74' }}\r\n                            alt=\"priority_high\"\r\n                        />\r\n                    </label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        id=\"inputPriority2\"\r\n                        name=\"inputPriority\"\r\n                        value=\"2\"\r\n                        onChange={prioOnChange}\r\n                    />\r\n                    <label htmlFor=\"inputPriority2\">\r\n                        <IoIosFlag\r\n                            style={{ color: '#375077' }}\r\n                            alt=\"priority_medium\"\r\n                        />\r\n                    </label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        id=\"inputPriority3\"\r\n                        name=\"inputPriority\"\r\n                        value=\"3\"\r\n                        onChange={prioOnChange}\r\n                        defaultChecked\r\n                    />\r\n                    <label htmlFor=\"inputPriority3\">\r\n                        <IoIosFlag\r\n                            style={{ color: '#999' }}\r\n                            alt=\"priority_low\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputForm;\r\n","import React from 'react';\r\nimport './TodoCats.scss';\r\nimport { IoIosCog } from 'react-icons/io';\r\n\r\nconst TodoCats = ({ cats, todos, openCatsModal }) => {\r\n    return (\r\n        <div>\r\n            <ul className=\"TodoListCatsList\">\r\n                <li className=\"TodoListCat currentCat\">all ({todos.length})</li>\r\n                {cats.map(cat => (\r\n                    <li className=\"TodoListCat\" key={cat.id}>\r\n                        {cat.name} (\r\n                        {todos.filter(todo => todo.cate === cat.id).length})\r\n                    </li>\r\n                ))}\r\n                <li\r\n                    className=\"TodoListCat TodoListCatAdd\"\r\n                    onClick={() => openCatsModal()}\r\n                >\r\n                    <IoIosCog />\r\n                </li>\r\n            </ul>\r\n            <div className=\"TodoListCatsListBottom\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(TodoCats);\r\n","import React, { useState, useCallback } from 'react';\r\nimport {\r\n    IoIosRemoveCircleOutline,\r\n    IoMdCreate,\r\n    IoMdSquareOutline,\r\n    IoIosCheckboxOutline,\r\n    IoIosCheckmark,\r\n    IoIosClose,\r\n} from 'react-icons/io';\r\nimport './TodoListItem.scss';\r\n\r\nconst TodoListItem = ({\r\n    cats,\r\n    todo,\r\n    todoItemRemove,\r\n    todoItemToggleCheck,\r\n    todoItemToggleEdit,\r\n    todoItemModify,\r\n}) => {\r\n    const { id, checked, cate, prior, text, isBeingEdited } = todo;\r\n    const cat = cats.find(cat => cat.id === cate);\r\n\r\n    const [inputValue, setInputValue] = useState(text);\r\n\r\n    const inputOnChange = useCallback(e => {\r\n        setInputValue(e.target.value);\r\n    }, []);\r\n\r\n    const inputOnSubmitEdit = useCallback(\r\n        e => {\r\n            todoItemToggleEdit(id);\r\n            todoItemModify(id, inputValue);\r\n            e.preventDefault();\r\n        },\r\n        [id, inputValue, todoItemToggleEdit, todoItemModify],\r\n    );\r\n\r\n    return (\r\n        <li\r\n            className={\r\n                `todoListItem todoListPriority` +\r\n                prior +\r\n                ` todoChecked_` +\r\n                checked\r\n            }\r\n            data-id={id}\r\n            data-priority={prior}\r\n        >\r\n            <button\r\n                className=\"checkBox\"\r\n                onClick={() => todoItemToggleCheck(id)}\r\n            >\r\n                {checked ? <IoIosCheckboxOutline /> : <IoMdSquareOutline />}\r\n            </button>\r\n            {isBeingEdited ? (\r\n                <form className=\"todoText\" onSubmit={inputOnSubmitEdit}>\r\n                    <input\r\n                        className=\"todoEditText\"\r\n                        type=\"text\"\r\n                        value={inputValue}\r\n                        onChange={inputOnChange}\r\n                        autoFocus\r\n                    />\r\n                    <button\r\n                        className=\"applyEdit\"\r\n                        onClick={inputOnSubmitEdit}\r\n                        type=\"submit\"\r\n                    >\r\n                        <IoIosCheckmark />\r\n                    </button>\r\n                    <button\r\n                        className=\"cancelEdit\"\r\n                        onClick={() => todoItemToggleEdit(id)}\r\n                    >\r\n                        <IoIosClose />\r\n                    </button>\r\n                </form>\r\n            ) : (\r\n                <>\r\n                    <span className=\"todoText\">{text || '-'}</span>\r\n                    {cat !== undefined && cat.id !== 0 ? (\r\n                        <span className=\"catLabel\">{cat.name || '-'}</span>\r\n                    ) : null}\r\n                    <button\r\n                        className=\"editButton\"\r\n                        onClick={() => todoItemToggleEdit(id)}\r\n                    >\r\n                        <IoMdCreate />\r\n                    </button>\r\n                    <button\r\n                        className=\"deleteButton\"\r\n                        onClick={() => todoItemRemove(id)}\r\n                    >\r\n                        <IoIosRemoveCircleOutline />\r\n                    </button>\r\n                </>\r\n            )}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default React.memo(TodoListItem);\r\n","import React from 'react';\r\nimport TodoListItem from './TodoListItem';\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = ({\r\n    cats,\r\n    todos,\r\n    todoItemRemove,\r\n    todoItemToggleCheck,\r\n    todoItemToggleEdit,\r\n    todoItemModify,\r\n}) => {\r\n    return (\r\n        <div className=\"TodoListPage\">\r\n            <ul>\r\n                {todos.map(todo => (\r\n                    <TodoListItem\r\n                        cats={cats}\r\n                        todo={todo}\r\n                        key={todo.id}\r\n                        todoItemRemove={todoItemRemove}\r\n                        todoItemToggleCheck={todoItemToggleCheck}\r\n                        todoItemToggleEdit={todoItemToggleEdit}\r\n                        todoItemModify={todoItemModify}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React, { useState, useCallback } from 'react';\r\nimport {\r\n    IoIosRemoveCircleOutline,\r\n    IoMdCreate,\r\n    IoIosCheckmark,\r\n    IoIosClose,\r\n} from 'react-icons/io';\r\nimport './CatsListItem.scss';\r\n\r\nconst CatsListItem = ({ todos, cat, catRemove, catToggleEdit, catModify }) => {\r\n    const { id, name, isBeingEdited } = cat;\r\n\r\n    const count = todos.filter(todo => todo.cate === id).length;\r\n\r\n    const [inputValue, setInputValue] = useState(name);\r\n\r\n    const inputOnChange = useCallback(e => {\r\n        setInputValue(e.target.value);\r\n    }, []);\r\n\r\n    const inputOnSubmitEdit = useCallback(\r\n        e => {\r\n            catToggleEdit(id);\r\n            catModify(id, inputValue);\r\n            e.preventDefault();\r\n        },\r\n        [id, inputValue, catToggleEdit, catModify],\r\n    );\r\n\r\n    const onCatDelete = useCallback(\r\n        (id, name, count) => {\r\n            let deleteMessage =\r\n                'You have  ' +\r\n                count +\r\n                '  todo items in this category :  ' +\r\n                name +\r\n                '\\n' +\r\n                '\\n' +\r\n                'These todo items will be listed under uncategorized.' +\r\n                '\\n' +\r\n                'Are you sure you want to delete this category?';\r\n\r\n            if (id !== 0 && count === 0) {\r\n                catRemove(id);\r\n            } else if (id !== 0 && count > 0 && window.confirm(deleteMessage)) {\r\n                catRemove(id);\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        [catRemove],\r\n    );\r\n\r\n    return (\r\n        <li className=\"catsListItem\" data-id={id} key={id}>\r\n            {isBeingEdited ? (\r\n                <form className=\"catName\" onSubmit={inputOnSubmitEdit}>\r\n                    <input\r\n                        className=\"catNameEdit\"\r\n                        type=\"text\"\r\n                        value={inputValue}\r\n                        onChange={inputOnChange}\r\n                        autoFocus\r\n                    />\r\n                    <button\r\n                        className=\"applyEdit\"\r\n                        onClick={inputOnSubmitEdit}\r\n                        type=\"submit\"\r\n                    >\r\n                        <IoIosCheckmark />\r\n                    </button>\r\n                    <button\r\n                        className=\"cancelEdit\"\r\n                        onClick={() => catToggleEdit(id)}\r\n                    >\r\n                        <IoIosClose />\r\n                    </button>\r\n                </form>\r\n            ) : (\r\n                <>\r\n                    <span className=\"catName\">\r\n                        {name} ({count})\r\n                    </span>\r\n                    <button\r\n                        className=\"editButton\"\r\n                        onClick={() => catToggleEdit(id)}\r\n                    >\r\n                        <IoMdCreate />\r\n                    </button>\r\n\r\n                    {id !== 0 ? (\r\n                        <button\r\n                            className=\"deleteButton\"\r\n                            onClick={() => onCatDelete(id, name, count)}\r\n                        >\r\n                            <IoIosRemoveCircleOutline />\r\n                        </button>\r\n                    ) : null}\r\n                </>\r\n            )}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default React.memo(CatsListItem);\r\n","import React, { useState, useCallback } from 'react';\r\nimport './CatsModal.scss';\r\nimport { IoIosAddCircleOutline, IoIosClose } from 'react-icons/io';\r\nimport CatsListItem from './CatsListItem.js';\r\n\r\nconst CatsModal = ({\r\n    todos,\r\n    catsModalState,\r\n    cats,\r\n    closeCatsModal,\r\n    catAdd,\r\n    catRemove,\r\n    catToggleEdit,\r\n    catModify,\r\n}) => {\r\n    const catsModalClass = catsModalState ? 'modalTrue' : 'modalFalse';\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const inputOnChange = useCallback(e => {\r\n        setInputValue(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            if (inputValue !== '') catAdd(inputValue);\r\n            setInputValue('');\r\n            e.preventDefault();\r\n        },\r\n        [inputValue, catAdd],\r\n    );\r\n\r\n    return (\r\n        <div className={'modalWrapper ' + catsModalClass}>\r\n            <div className=\"catsModal\">\r\n                <button className=\"closeModal\" onClick={closeCatsModal}>\r\n                    <IoIosClose />\r\n                </button>\r\n                <h3>Manage Categories</h3>\r\n\r\n                <ul className=\"catsList\">\r\n                    {cats.map(cat => (\r\n                        <CatsListItem\r\n                            todos={todos}\r\n                            cat={cat}\r\n                            key={cat.id}\r\n                            catRemove={catRemove}\r\n                            catToggleEdit={catToggleEdit}\r\n                            catModify={catModify}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n\r\n                <form className=\"catAddForm\" onSubmit={onSubmit}>\r\n                    <input\r\n                        className=\"todoInputText\"\r\n                        type=\"text\"\r\n                        placeholder=\"new category\"\r\n                        value={inputValue}\r\n                        onChange={inputOnChange}\r\n                        autoFocus\r\n                    />\r\n                    <button className=\"catAdd\" type=\"submit\">\r\n                        <IoIosAddCircleOutline />\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            <div className=\"modalBg\" onClick={closeCatsModal}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(CatsModal);\r\n","import React, { useState, useRef, useCallback, useReducer } from 'react';\r\nimport './App.scss';\r\nimport InputForm from './components/InputForm';\r\nimport TodoCats from './components/TodoCats';\r\nimport TodoList from './components/TodoList';\r\nimport CatsModal from './components/CatsModal.js';\r\n\r\nconst catsData = [\r\n    {\r\n        id: 0,\r\n        sort: 0,\r\n        name: '-',\r\n        isBeingEdited: false,\r\n    },\r\n    {\r\n        id: 1,\r\n        sort: 1,\r\n        name: 'plants',\r\n        isBeingEdited: false,\r\n    },\r\n    {\r\n        id: 2,\r\n        sort: 2,\r\n        name: 'cats',\r\n        isBeingEdited: false,\r\n    },\r\n    {\r\n        id: 3,\r\n        sort: 3,\r\n        name: 'dogs',\r\n        isBeingEdited: false,\r\n    },\r\n];\r\n\r\nconst bulkStartNum = 3;\r\n\r\nfunction createBulkTodos() {\r\n    const array = [];\r\n    for (let i = 1; i <= bulkStartNum; i++) {\r\n        array.push({\r\n            id: i,\r\n            checked: false,\r\n            cate: 0,\r\n            prior: 3,\r\n            text: `todo item #${i}`,\r\n            isBeingEdited: false,\r\n        });\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction todoReducer(todos, action) {\r\n    switch (action.type) {\r\n        case 'INSERT':\r\n            return todos.concat(action.todo);\r\n        case 'REMOVE':\r\n            return todos.filter(todo => todo.id !== action.todoItemId);\r\n        case 'TOGGLE_CHECK':\r\n            return todos.map(todo =>\r\n                todo.id === action.todoItemId\r\n                    ? { ...todo, checked: !todo.checked }\r\n                    : todo,\r\n            );\r\n        case 'TOGGLE_EDIT':\r\n            return todos.map(todo =>\r\n                todo.id === action.todoItemId\r\n                    ? { ...todo, isBeingEdited: !todo.isBeingEdited }\r\n                    : { ...todo, isBeingEdited: false },\r\n            );\r\n        case 'MODIFY':\r\n            return todos.map(todo =>\r\n                todo.id === action.todoItemId\r\n                    ? { ...todo, text: action.todoItemText }\r\n                    : todo,\r\n            );\r\n        case 'UNCATEGORIZE':\r\n            return todos.map(todo =>\r\n                todo.cate === action.catItemId ? { ...todo, cate: 0 } : todo,\r\n            );\r\n        default:\r\n            return todos;\r\n    }\r\n}\r\n\r\nfunction catsReducer(cats, action) {\r\n    switch (action.type) {\r\n        case 'INSERT':\r\n            return cats.concat(action.newCat);\r\n        case 'REMOVE':\r\n            return cats.filter(cat => cat.id !== action.catItemId);\r\n        case 'TOGGLE_EDIT':\r\n            return cats.map(cat =>\r\n                cat.id === action.catItemId\r\n                    ? { ...cat, isBeingEdited: !cat.isBeingEdited }\r\n                    : { ...cat, isBeingEdited: false },\r\n            );\r\n        case 'MODIFY':\r\n            return cats.map(cat =>\r\n                cat.id === action.catItemId\r\n                    ? { ...cat, name: action.catItemText }\r\n                    : cat,\r\n            );\r\n        default:\r\n            return cats;\r\n    }\r\n}\r\n\r\nfunction App() {\r\n    const [todos, dispatchTodo] = useReducer(\r\n        todoReducer,\r\n        undefined,\r\n        createBulkTodos,\r\n    );\r\n    const [cats, dispatchCats] = useReducer(catsReducer, catsData);\r\n    const [catsModalState, setCatsModalState] = useState(false);\r\n    let nextTodoId = useRef(bulkStartNum + 1);\r\n    let nextCatId = useRef(5);\r\n\r\n    const todoItemAdd = useCallback((inputValue, catValue, prioValue) => {\r\n        const todo = {\r\n            id: nextTodoId.current,\r\n            checked: false,\r\n            cate: catValue,\r\n            prior: prioValue,\r\n            text: inputValue,\r\n            isBeingEdited: false,\r\n        };\r\n        dispatchTodo({ type: 'INSERT', todo });\r\n        nextTodoId.current += 1;\r\n    }, []);\r\n\r\n    const todoItemRemove = useCallback(todoItemId => {\r\n        dispatchTodo({ type: 'REMOVE', todoItemId });\r\n    }, []);\r\n\r\n    const todoItemToggleCheck = useCallback(todoItemId => {\r\n        dispatchTodo({ type: 'TOGGLE_CHECK', todoItemId });\r\n    }, []);\r\n\r\n    const todoItemToggleEdit = useCallback(todoItemId => {\r\n        dispatchTodo({ type: 'TOGGLE_EDIT', todoItemId });\r\n    }, []);\r\n\r\n    const todoItemModify = useCallback((todoItemId, todoItemText) => {\r\n        dispatchTodo({ type: 'MODIFY', todoItemId, todoItemText });\r\n    }, []);\r\n\r\n    const openCatsModal = useCallback(() => {\r\n        setCatsModalState(true);\r\n    }, []);\r\n\r\n    const closeCatsModal = useCallback(() => {\r\n        setCatsModalState(false);\r\n    }, []);\r\n\r\n    const catAdd = useCallback(inputValue => {\r\n        const newCat = {\r\n            id: nextCatId.current,\r\n            sort: 2,\r\n            name: inputValue,\r\n            isBeingEdited: false,\r\n        };\r\n        dispatchCats({ type: 'INSERT', newCat });\r\n        nextCatId.current += 1;\r\n    }, []);\r\n\r\n    const catRemove = useCallback(catItemId => {\r\n        dispatchCats({ type: 'REMOVE', catItemId });\r\n        dispatchTodo({ type: 'UNCATEGORIZE', catItemId });\r\n    }, []);\r\n\r\n    const catToggleEdit = useCallback(catItemId => {\r\n        dispatchCats({ type: 'TOGGLE_EDIT', catItemId });\r\n    }, []);\r\n\r\n    const catModify = useCallback((catItemId, catItemText) => {\r\n        dispatchCats({ type: 'MODIFY', catItemId, catItemText });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">Kitty Needs Kibbles</header>\r\n            <main className=\"App-main\">\r\n                <CatsModal\r\n                    todos={todos}\r\n                    catsModalState={catsModalState}\r\n                    cats={cats}\r\n                    closeCatsModal={closeCatsModal}\r\n                    catAdd={catAdd}\r\n                    catRemove={catRemove}\r\n                    catToggleEdit={catToggleEdit}\r\n                    catModify={catModify}\r\n                />\r\n                <InputForm cats={cats} todoItemAdd={todoItemAdd} />\r\n                <TodoCats\r\n                    cats={cats}\r\n                    todos={todos}\r\n                    openCatsModal={openCatsModal}\r\n                />\r\n                <TodoList\r\n                    cats={cats}\r\n                    todos={todos}\r\n                    todoItemRemove={todoItemRemove}\r\n                    todoItemToggleCheck={todoItemToggleCheck}\r\n                    todoItemToggleEdit={todoItemToggleEdit}\r\n                    todoItemModify={todoItemModify}\r\n                />\r\n            </main>\r\n            <footer className=\"App-footer\">you need new socks in 2020</footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}