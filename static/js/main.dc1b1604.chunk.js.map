{"version":3,"sources":["components/InputForm.js","components/TodoTabs.js","components/TodoListItem.js","components/TodoList.js","components/CatsListItem.js","components/CatsModal.js","App.js","serviceWorker.js","index.js"],"names":["InputForm","cats","todoItemAdd","useState","inputValue","setInputValue","catValue","setCatValue","prioValue","setPrioValue","inputOnChange","useCallback","e","target","value","catOnChange","parseInt","prioOnChange","onSubmit","preventDefault","className","onChange","map","cat","id","key","name","type","defaultChecked","htmlFor","style","color","alt","placeholder","autoFocus","React","memo","todos","openCatsModal","currentTab","changeCurrentTab","onClick","length","filter","todo","cate","todoItemRemove","todoItemToggleCheck","todoItemToggleEdit","todoItemModify","checked","prior","text","isBeingEdited","inputOnKey","keyCode","inputOnSubmitEdit","inputCancelEdit","data-id","data-priority","onKeyDown","undefined","find","todosCount","catRemove","catToggleEdit","catModify","inputOnCancelEdit","onCatDelete","deleteMessage","window","confirm","maxLength","catsModalState","closeCatsModal","catAdd","catsModalClass","bulkStartNum","createBulkTodos","array","i","push","Math","floor","random","catsData","sort","todoReducer","action","concat","todoItemId","todoItemText","catItemId","catsReducer","newCat","catItemText","App","useReducer","dispatchTodo","dispatchCats","setCatsModalState","nextTodoId","useRef","nextCatId","setCurrentTab","current","selectTabId","isNaN","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc1b1604.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport './InputForm.scss';\r\nimport { IoIosAddCircleOutline, IoIosFlag } from 'react-icons/io';\r\n\r\nconst InputForm = ({ cats, todoItemAdd }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [catValue, setCatValue] = useState(0);\r\n    const [prioValue, setPrioValue] = useState(3);\r\n\r\n    const inputOnChange = useCallback(e => {\r\n        setInputValue(e.target.value);\r\n    }, []);\r\n\r\n    const catOnChange = useCallback(e => {\r\n        setCatValue(parseInt(e.target.value));\r\n    }, []);\r\n\r\n    const prioOnChange = useCallback(e => {\r\n        setPrioValue(parseInt(e.target.value));\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            if (inputValue !== '') todoItemAdd(inputValue, catValue, prioValue);\r\n            setInputValue('');\r\n            e.preventDefault();\r\n        },\r\n        [todoItemAdd, inputValue, catValue, prioValue],\r\n    );\r\n\r\n    return (\r\n        <div className=\"inputBox\">\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"inputOptionCat\">\r\n                    <select onChange={catOnChange}>\r\n                        {cats.map(cat => (\r\n                            <option value={cat.id} key={cat.id}>\r\n                                {cat.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"inputOptionPrio\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        id=\"inputPriority3\"\r\n                        name=\"inputPriority\"\r\n                        value=\"3\"\r\n                        onChange={prioOnChange}\r\n                        defaultChecked\r\n                    />\r\n                    <label htmlFor=\"inputPriority3\">\r\n                        <IoIosFlag\r\n                            style={{ color: '#999' }}\r\n                            alt=\"priority_low\"\r\n                        />\r\n                    </label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        id=\"inputPriority2\"\r\n                        name=\"inputPriority\"\r\n                        value=\"2\"\r\n                        onChange={prioOnChange}\r\n                    />\r\n                    <label htmlFor=\"inputPriority2\">\r\n                        <IoIosFlag\r\n                            style={{ color: '#375077' }}\r\n                            alt=\"priority_medium\"\r\n                        />\r\n                    </label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        id=\"inputPriority1\"\r\n                        name=\"inputPriority\"\r\n                        value=\"1\"\r\n                        onChange={prioOnChange}\r\n                    />\r\n                    <label htmlFor=\"inputPriority1\">\r\n                        <IoIosFlag\r\n                            style={{ color: '#df5c74' }}\r\n                            alt=\"priority_high\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <input\r\n                    className=\"todoInputText\"\r\n                    type=\"text\"\r\n                    placeholder=\"new entry\"\r\n                    value={inputValue}\r\n                    onChange={inputOnChange}\r\n                    autoFocus\r\n                />\r\n                <button className=\"todoInputButton\" type=\"submit\">\r\n                    <IoIosAddCircleOutline />\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputForm;\r\n","import React from 'react';\r\nimport './TodoTabs.scss';\r\nimport { IoMdFlower } from 'react-icons/io';\r\n\r\nconst TodoTabs = ({ cats, todos, openCatsModal, currentTab, changeCurrentTab }) => {\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"TodoListCatsList\">\r\n                <li className={\"TodoListCat \" + (currentTab === 'all' ? 'currentCat' : '')} onClick={() => changeCurrentTab('all')}>all ({todos.length})</li>\r\n                {cats.map(cat => (\r\n                    <li className={\"TodoListCat \" + (currentTab === cat.id ? 'currentCat' : '')} key={cat.id} onClick={() => changeCurrentTab(cat.id)}>\r\n                        {cat.name} (\r\n                        {todos.filter(todo => todo.cate === cat.id).length})\r\n                    </li>\r\n                ))}\r\n                <li\r\n                    className=\"TodoListCat TodoListCatAdd\"\r\n                    onClick={() => openCatsModal()}\r\n                >\r\n                    <IoMdFlower />\r\n                </li>\r\n            </ul>\r\n            <div className=\"TodoListCatsListBottom\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(TodoTabs);\r\n","import React, { useState, useCallback } from 'react';\r\nimport {\r\n    IoIosRemoveCircleOutline,\r\n    IoMdCreate,\r\n    IoMdSquareOutline,\r\n    IoIosCheckboxOutline,\r\n    IoIosCheckmark,\r\n    IoIosClose,\r\n    IoIosFlag,\r\n} from 'react-icons/io';\r\nimport './TodoListItem.scss';\r\n\r\nconst TodoListItem = ({\r\n    cat,\r\n    todo,\r\n    todoItemRemove,\r\n    todoItemToggleCheck,\r\n    todoItemToggleEdit,\r\n    todoItemModify,\r\n}) => {\r\n    const { id, checked, cate, prior, text, isBeingEdited } = todo;\r\n\r\n    const [inputValue, setInputValue] = useState(text);\r\n\r\n    const inputOnChange = useCallback(e => {\r\n        setInputValue(e.target.value);\r\n    }, []);\r\n\r\n    const inputOnKey = useCallback(\r\n        e => {\r\n            if (e.keyCode === 27) todoItemToggleEdit(id);\r\n        },\r\n        [id, todoItemToggleEdit],\r\n    );\r\n\r\n    const inputOnSubmitEdit = useCallback(\r\n        e => {\r\n            todoItemToggleEdit(id);\r\n            todoItemModify(id, inputValue);\r\n            e.preventDefault();\r\n        },\r\n        [id, inputValue, todoItemToggleEdit, todoItemModify],\r\n    );\r\n\r\n    const inputCancelEdit = useCallback(\r\n        () => {\r\n            setInputValue(text);\r\n            todoItemToggleEdit(id)\r\n        },\r\n        [id, text, todoItemToggleEdit]\r\n    );\r\n\r\n    return (\r\n        <li\r\n            className={\r\n                `todoListItem todoListPriority` +\r\n                prior +\r\n                ` todoChecked_` +\r\n                checked\r\n            }\r\n            data-id={id}\r\n            data-priority={prior}\r\n        >\r\n            <button\r\n                className=\"checkBox\"\r\n                onClick={() => todoItemToggleCheck(id)}\r\n            >\r\n                {checked ? <IoIosCheckboxOutline /> : <IoMdSquareOutline />}\r\n            </button>\r\n            {prior !== 3 ? (\r\n                <button className=\"priorityFlag\">\r\n                    <IoIosFlag />\r\n                </button>\r\n            ) : null}\r\n\r\n            {isBeingEdited ? (\r\n                <form className=\"todoText\" onSubmit={inputOnSubmitEdit}>\r\n                    <input\r\n                        className=\"todoEditText\"\r\n                        type=\"text\"\r\n                        value={inputValue}\r\n                        onChange={inputOnChange}\r\n                        onKeyDown={inputOnKey}\r\n                        autoFocus\r\n                    />\r\n                    <button\r\n                        className=\"applyEdit\"\r\n                        onClick={inputOnSubmitEdit}\r\n                        type=\"submit\"\r\n                    >\r\n                        <IoIosCheckmark />\r\n                    </button>\r\n                    <button\r\n                        className=\"cancelEdit\"\r\n                        onClick={inputCancelEdit}\r\n                    >\r\n                        <IoIosClose />\r\n                    </button>\r\n                </form>\r\n            ) : (\r\n                <>\r\n                    <span className=\"todoText\">{inputValue || '-'}</span>\r\n                    {cat !== undefined && cat.id !== 0 ? (\r\n                        <span className={`catLabel catNum` + cate}>\r\n                            {cat.name || '-'}\r\n                        </span>\r\n                    ) : null}\r\n                    <button\r\n                        className=\"editButton\"\r\n                        onClick={() => todoItemToggleEdit(id)}\r\n                    >\r\n                        <IoMdCreate />\r\n                    </button>\r\n                    <button\r\n                        className=\"deleteButton\"\r\n                        onClick={() => todoItemRemove(id)}\r\n                    >\r\n                        <IoIosRemoveCircleOutline />\r\n                    </button>\r\n                </>\r\n            )}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default React.memo(TodoListItem);\r\n","import React from 'react';\r\nimport TodoListItem from './TodoListItem';\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = ({\r\n    cats,\r\n    todos,\r\n    currentTab,\r\n    todoItemRemove,\r\n    todoItemToggleCheck,\r\n    todoItemToggleEdit,\r\n    todoItemModify,\r\n}) => {\r\n    return (\r\n        <div className=\"TodoListPage\">\r\n            <ul>\r\n                {currentTab === 'all' ? (\r\n                    todos.map(todo => (\r\n                        <TodoListItem\r\n                            cat={cats.find(cat => cat.id === todo.cate)}\r\n                            todo={todo}\r\n                            key={todo.id}\r\n                            todoItemRemove={todoItemRemove}\r\n                            todoItemToggleCheck={todoItemToggleCheck}\r\n                            todoItemToggleEdit={todoItemToggleEdit}\r\n                            todoItemModify={todoItemModify}\r\n                        />\r\n                    ))\r\n                ) : (\r\n                    todos.filter(todo => todo.cate === currentTab).map(todo => (\r\n                        <TodoListItem\r\n                            cat={cats.find(cat => cat.id === todo.cate)}\r\n                            todo={todo}\r\n                            key={todo.id}\r\n                            todoItemRemove={todoItemRemove}\r\n                            todoItemToggleCheck={todoItemToggleCheck}\r\n                            todoItemToggleEdit={todoItemToggleEdit}\r\n                            todoItemModify={todoItemModify}\r\n                        />\r\n                    ))\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React, { useState, useCallback } from 'react';\r\nimport {\r\n    IoIosRemoveCircleOutline,\r\n    IoMdCreate,\r\n    IoIosCheckmark,\r\n    IoIosClose,\r\n} from 'react-icons/io';\r\nimport './CatsListItem.scss';\r\n\r\nconst CatsListItem = ({\r\n    todosCount,\r\n    cat,\r\n    catRemove,\r\n    catToggleEdit,\r\n    catModify,\r\n}) => {\r\n    const { id, name, isBeingEdited } = cat;\r\n\r\n    const [inputValue, setInputValue] = useState(name);\r\n\r\n    const inputOnChange = useCallback(e => {\r\n        setInputValue(e.target.value);\r\n    }, []);\r\n\r\n    const inputOnKey = useCallback(\r\n        e => {\r\n            if (e.keyCode === 27) catToggleEdit(id);\r\n        },\r\n        [id, catToggleEdit],\r\n    );\r\n\r\n    const inputOnSubmitEdit = useCallback(\r\n        e => {\r\n            catToggleEdit(id);\r\n            catModify(id, inputValue);\r\n            e.preventDefault();\r\n        },\r\n        [id, inputValue, catToggleEdit, catModify],\r\n    );\r\n\r\n    const inputOnCancelEdit = useCallback(\r\n        () => {\r\n            setInputValue(name);\r\n            catToggleEdit(id);\r\n        },\r\n        [id, name, catToggleEdit]\r\n    );\r\n\r\n    const onCatDelete = useCallback(\r\n        (id, name, todosCount) => {\r\n            let deleteMessage =\r\n                'You have  ' +\r\n                todosCount +\r\n                '  todo items in this category :  ' +\r\n                name +\r\n                '\\n' +\r\n                '\\n' +\r\n                'These todo items will be listed under uncategorized.' +\r\n                '\\n' +\r\n                'Are you sure you want to delete this category?';\r\n\r\n            if (id !== 0 && todosCount === 0) {\r\n                catRemove(id);\r\n            } else if (\r\n                id !== 0 &&\r\n                todosCount > 0 &&\r\n                window.confirm(deleteMessage)\r\n            ) {\r\n                catRemove(id);\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        [catRemove],\r\n    );\r\n\r\n    return (\r\n        <li className=\"catsListItem\" data-id={id} key={id}>\r\n            {isBeingEdited ? (\r\n                <form className=\"catName\" onSubmit={inputOnSubmitEdit}>\r\n                    <input\r\n                        className=\"catNameEdit\"\r\n                        type=\"text\"\r\n                        maxLength=\"24\"\r\n                        value={inputValue}\r\n                        onChange={inputOnChange}\r\n                        onKeyDown={inputOnKey}\r\n                        autoFocus\r\n                    />\r\n                    <button\r\n                        className=\"applyEdit\"\r\n                        onClick={inputOnSubmitEdit}\r\n                        type=\"submit\"\r\n                    >\r\n                        <IoIosCheckmark />\r\n                    </button>\r\n                    <button\r\n                        className=\"cancelEdit\"\r\n                        onClick={inputOnCancelEdit}\r\n                    >\r\n                        <IoIosClose />\r\n                    </button>\r\n                </form>\r\n            ) : (\r\n                <>\r\n                    <span className=\"catName\">\r\n                        {inputValue} ({todosCount})\r\n                    </span>\r\n                    <button\r\n                        className=\"editButton\"\r\n                        onClick={() => catToggleEdit(id)}\r\n                    >\r\n                        <IoMdCreate />\r\n                    </button>\r\n\r\n                    {id !== 0 ? (\r\n                        <button\r\n                            className=\"deleteButton\"\r\n                            onClick={() =>\r\n                                onCatDelete(id, inputValue, todosCount)\r\n                            }\r\n                        >\r\n                            <IoIosRemoveCircleOutline />\r\n                        </button>\r\n                    ) : null}\r\n                </>\r\n            )}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default React.memo(CatsListItem);\r\n","import React, { useState, useCallback } from 'react';\r\nimport './CatsModal.scss';\r\nimport { IoIosAddCircleOutline, IoIosClose } from 'react-icons/io';\r\nimport CatsListItem from './CatsListItem.js';\r\n\r\nconst CatsModal = ({\r\n    todos,\r\n    catsModalState,\r\n    cats,\r\n    closeCatsModal,\r\n    catAdd,\r\n    catRemove,\r\n    catToggleEdit,\r\n    catModify,\r\n}) => {\r\n    const catsModalClass = catsModalState ? 'modalTrue' : 'modalFalse';\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const inputOnChange = useCallback(e => {\r\n        setInputValue(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            if (inputValue !== '') catAdd(inputValue);\r\n            setInputValue('');\r\n            e.preventDefault();\r\n        },\r\n        [inputValue, catAdd],\r\n    );\r\n\r\n    return (\r\n        <div className={'modalWrapper ' + catsModalClass}>\r\n            <div className=\"catsModal\">\r\n                <button className=\"closeModal\" onClick={closeCatsModal}>\r\n                    <IoIosClose />\r\n                </button>\r\n                <h3>Manage Categories</h3>\r\n\r\n                <ul className=\"catsList\">\r\n                    {cats.map(cat => (\r\n                        <CatsListItem\r\n                            todosCount={\r\n                                todos.filter(todo => todo.cate === cat.id)\r\n                                    .length\r\n                            }\r\n                            cat={cat}\r\n                            key={cat.id}\r\n                            catRemove={catRemove}\r\n                            catToggleEdit={catToggleEdit}\r\n                            catModify={catModify}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n\r\n                <form className=\"catAddForm\" onSubmit={onSubmit}>\r\n                    <input\r\n                        className=\"todoInputText\"\r\n                        type=\"text\"\r\n                        placeholder=\"new category name\"\r\n                        maxLength=\"24\"\r\n                        value={inputValue}\r\n                        onChange={inputOnChange}\r\n                        autoFocus\r\n                    />\r\n                    <button className=\"catAdd\" type=\"submit\">\r\n                        <IoIosAddCircleOutline />\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            <div className=\"modalBg\" onClick={closeCatsModal}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(CatsModal);\r\n","import React, { useState, useRef, useCallback, useReducer } from 'react';\r\nimport './App.scss';\r\nimport InputForm from './components/InputForm';\r\nimport TodoTabs from './components/TodoTabs';\r\nimport TodoList from './components/TodoList';\r\nimport CatsModal from './components/CatsModal.js';\r\n\r\nconst bulkStartNum = 50;\r\n\r\nfunction createBulkTodos() {\r\n    const array = [];\r\n    for (let i = 1; i <= bulkStartNum-10; i++) {\r\n        array.push({\r\n            id: i,\r\n            checked: false,\r\n            cate: Math.floor(Math.random() * 4),\r\n            prior: 3,\r\n            text: `todo item #${i}`,\r\n            isBeingEdited: false,\r\n        });\r\n    };\r\n    array.push({\r\n        id: bulkStartNum-9,\r\n        checked: false,\r\n        cate: 2,\r\n        prior: 1,\r\n        text: `고양이 밥주기`,\r\n        isBeingEdited: false,\r\n    },{\r\n        id: bulkStartNum-8,\r\n        checked: false,\r\n        cate: 1,\r\n        prior: 1,\r\n        text: `화분에 물 주기`,\r\n        isBeingEdited: false,\r\n    },{\r\n        id: bulkStartNum-7,\r\n        checked: false,\r\n        cate: 1,\r\n        prior: 3,\r\n        text: `나무에 비료 주기`,\r\n        isBeingEdited: false,\r\n    },{\r\n        id: bulkStartNum-6,\r\n        checked: false,\r\n        cate: 3,\r\n        prior: 3,\r\n        text: `강아지 쓰다듬기`,\r\n        isBeingEdited: false,\r\n    },{\r\n        id: bulkStartNum-5,\r\n        checked: false,\r\n        cate: 3,\r\n        prior: 2,\r\n        text: `강아지 산책시키기`,\r\n        isBeingEdited: false,\r\n    },{\r\n        id: bulkStartNum-4,\r\n        checked: false,\r\n        cate: 2,\r\n        prior: 3,\r\n        text: `고양이 사료 추가 주문하기`,\r\n        isBeingEdited: false,\r\n    },{\r\n        id: bulkStartNum-3,\r\n        checked: false,\r\n        cate: 0,\r\n        prior: 3,\r\n        text: `방 청소하기`,\r\n        isBeingEdited: false,\r\n    },{\r\n        id: bulkStartNum-2,\r\n        checked: false,\r\n        cate: 0,\r\n        prior: 2,\r\n        text: `리덕스 이해하기`,\r\n        isBeingEdited: false,\r\n    },{\r\n        id: bulkStartNum-1,\r\n        checked: false,\r\n        cate: 0,\r\n        prior: 3,\r\n        text: `지갑에 있는 동전 없애기`,\r\n        isBeingEdited: false,\r\n    },{\r\n        id: bulkStartNum,\r\n        checked: false,\r\n        cate: 0,\r\n        prior: 3,\r\n        text: `점심먹기`,\r\n        isBeingEdited: false,\r\n    });\r\n    return array;\r\n}\r\n\r\nconst catsData = [\r\n    {\r\n        id: 0,\r\n        sort: 0,\r\n        name: 'uncategorized',\r\n        isBeingEdited: false,\r\n    },\r\n    {\r\n        id: 1,\r\n        sort: 1,\r\n        name: 'plants',\r\n        isBeingEdited: false,\r\n    },\r\n    {\r\n        id: 2,\r\n        sort: 2,\r\n        name: 'cats',\r\n        isBeingEdited: false,\r\n    },\r\n    {\r\n        id: 3,\r\n        sort: 3,\r\n        name: 'dogs',\r\n        isBeingEdited: false,\r\n    },\r\n];\r\n\r\nfunction todoReducer(todos, action) {\r\n    switch (action.type) {\r\n        case 'INSERT':\r\n            return todos.concat(action.todo);\r\n        case 'REMOVE':\r\n            return todos.filter(todo => todo.id !== action.todoItemId);\r\n        case 'TOGGLE_CHECK':\r\n            return todos.map(todo =>\r\n                todo.id === action.todoItemId\r\n                    ? { ...todo, checked: !todo.checked }\r\n                    : todo,\r\n            );\r\n        case 'TOGGLE_EDIT':\r\n            return todos.map(todo =>\r\n                todo.id === action.todoItemId\r\n                    ? { ...todo, isBeingEdited: !todo.isBeingEdited }\r\n                    : todo,\r\n            );\r\n        case 'MODIFY':\r\n            return todos.map(todo =>\r\n                todo.id === action.todoItemId\r\n                    ? { ...todo, text: action.todoItemText }\r\n                    : todo,\r\n            );\r\n        case 'UNCATEGORIZE':\r\n            return todos.map(todo =>\r\n                todo.cate === action.catItemId ? { ...todo, cate: 0 } : todo,\r\n            );\r\n        default:\r\n            return todos;\r\n    }\r\n}\r\n\r\nfunction catsReducer(cats, action) {\r\n    switch (action.type) {\r\n        case 'INSERT':\r\n            return cats.concat(action.newCat);\r\n        case 'REMOVE':\r\n            return cats.filter(cat => cat.id !== action.catItemId);\r\n        case 'TOGGLE_EDIT':\r\n            return cats.map(cat =>\r\n                cat.id === action.catItemId\r\n                    ? { ...cat, isBeingEdited: !cat.isBeingEdited }\r\n                    : cat,\r\n            );\r\n        case 'MODIFY':\r\n            return cats.map(cat =>\r\n                cat.id === action.catItemId\r\n                    ? { ...cat, name: action.catItemText }\r\n                    : cat,\r\n            );\r\n        default:\r\n            return cats;\r\n    }\r\n}\r\n\r\nfunction App() {\r\n    const [todos, dispatchTodo] = useReducer(\r\n        todoReducer,\r\n        undefined,\r\n        createBulkTodos,\r\n    );\r\n    const [cats, dispatchCats] = useReducer(catsReducer, catsData);\r\n    const [catsModalState, setCatsModalState] = useState(false);\r\n    let nextTodoId = useRef(bulkStartNum+1);\r\n    let nextCatId = useRef(5);\r\n    const [currentTab, setCurrentTab] = useState('all');\r\n\r\n    const todoItemAdd = useCallback((inputValue, catValue, prioValue) => {\r\n        const todo = {\r\n            id: nextTodoId.current,\r\n            checked: false,\r\n            cate: catValue,\r\n            prior: prioValue,\r\n            text: inputValue,\r\n            isBeingEdited: false,\r\n        };\r\n        dispatchTodo({ type: 'INSERT', todo });\r\n        nextTodoId.current += 1;\r\n    }, []);\r\n\r\n    const todoItemRemove = useCallback(todoItemId => {\r\n        dispatchTodo({ type: 'REMOVE', todoItemId });\r\n    }, []);\r\n\r\n    const todoItemToggleCheck = useCallback(todoItemId => {\r\n        dispatchTodo({ type: 'TOGGLE_CHECK', todoItemId });\r\n    }, []);\r\n\r\n    const todoItemToggleEdit = useCallback(todoItemId => {\r\n        dispatchTodo({ type: 'TOGGLE_EDIT', todoItemId });\r\n    }, []);\r\n\r\n    const todoItemModify = useCallback((todoItemId, todoItemText) => {\r\n        dispatchTodo({ type: 'MODIFY', todoItemId, todoItemText });\r\n    }, []);\r\n\r\n    const openCatsModal = useCallback(() => {\r\n        setCatsModalState(true);\r\n    }, []);\r\n\r\n    const closeCatsModal = useCallback(() => {\r\n        setCatsModalState(false);\r\n    }, []);\r\n\r\n    const catAdd = useCallback(inputValue => {\r\n        const newCat = {\r\n            id: nextCatId.current,\r\n            sort: 2,\r\n            name: inputValue,\r\n            isBeingEdited: false,\r\n        };\r\n        dispatchCats({ type: 'INSERT', newCat });\r\n        nextCatId.current += 1;\r\n    }, []);\r\n\r\n    const catRemove = useCallback(catItemId => {\r\n        dispatchCats({ type: 'REMOVE', catItemId });\r\n        dispatchTodo({ type: 'UNCATEGORIZE', catItemId });\r\n    }, []);\r\n\r\n    const catToggleEdit = useCallback(catItemId => {\r\n        dispatchCats({ type: 'TOGGLE_EDIT', catItemId });\r\n    }, []);\r\n\r\n    const catModify = useCallback((catItemId, catItemText) => {\r\n        dispatchCats({ type: 'MODIFY', catItemId, catItemText });\r\n    }, []);\r\n\r\n    const changeCurrentTab = useCallback((selectTabId) => {\r\n        isNaN(selectTabId) ? setCurrentTab('all') : setCurrentTab(selectTabId);\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n<header className=\"App-header\">Kitty Needs Kibbles</header>\r\n            <main className=\"App-main\">\r\n                <CatsModal\r\n                    todos={todos}\r\n                    catsModalState={catsModalState}\r\n                    cats={cats}\r\n                    closeCatsModal={closeCatsModal}\r\n                    catAdd={catAdd}\r\n                    catRemove={catRemove}\r\n                    catToggleEdit={catToggleEdit}\r\n                    catModify={catModify}\r\n                />\r\n                <InputForm cats={cats} todoItemAdd={todoItemAdd} />\r\n                <TodoTabs\r\n                    cats={cats}\r\n                    todos={todos}\r\n                    openCatsModal={openCatsModal}\r\n                    currentTab={currentTab}\r\n                    changeCurrentTab={changeCurrentTab}\r\n                />\r\n                <TodoList\r\n                    cats={cats}\r\n                    todos={todos}\r\n                    currentTab={currentTab}\r\n                    todoItemRemove={todoItemRemove}\r\n                    todoItemToggleCheck={todoItemToggleCheck}\r\n                    todoItemToggleEdit={todoItemToggleEdit}\r\n                    todoItemModify={todoItemModify}\r\n                />\r\n            </main>\r\n            <footer className=\"App-footer\">you need new socks in 2020</footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}